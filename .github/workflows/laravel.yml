name: Tests with Vitest and PHPUnit

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: psr
          mysql root password: root123
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Captura diretório do pnpm
        id: pnpm-cache
        run: echo "dir=$(pnpm store path --silent)" >> "$GITHUB_OUTPUT"
      - name: Captura diretório do composer
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"
      - name: Cache
        id: cache-npm-php
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.dir }}
            ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-cache-${{ hashFiles('**/composer.lock') }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-cache-
      - name: Instala as dependências do composer
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Gera uma key aleatória
        run: php artisan key:generate
      - name: Permissão de diretório
        run: chmod -R 777 storage bootstrap/cache
      - name: Instala as dependências JS
        run: pnpm i
      - name: Vite Build
        run: pnpm build
      - name: Executa testes com o PHP
        env:
          DB_DATABASE: psr
          DB_PASSWORD: root123
        run: |
          php artisan serve --no-reload &
          php artisan migrate
          php artisan db:seed
          php artisan test
      - name: Run E2E tests
        uses: cypress-io/github-action@v5
        with:
          build: npx vite build --no-progress
          start: php artisan serve --port=80 --quiet
          wait-on: 'http://localhost'
          quiet: true
          record: true
          parallel: false
      - uses: actions/upload-artifact@v3
        # add the line below to store screenshots only on failures
        # if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`
      - uses: actions/upload-artifact@v3
        env:
          DB_DATABASE: psr
          DB_PASSWORD: root123
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore
